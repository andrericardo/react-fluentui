{"version":3,"sources":["Framelogo.svg","components/Header.tsx","components/MessageBox.tsx","components/Site/Sidebar.tsx","components/Site/SiteCommandBar.tsx","components/Site/DetailsListDocumentsExample.tsx","components/Site/PageContent.tsx","components/Site/Site.tsx","hooks/useWindowSize.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["calloutProps","gapSpace","Header","Stack","disableShrink","horizontal","grow","verticalAlign","horizontalAlign","styles","root","backgroundColor","height","maxHeight","Item","Link","href","wrap","Image","src","framelogo","alt","Text","variant","color","nowrap","block","SearchBox","placeholder","onSearch","newValue","console","log","display","justifyContent","TooltipHost","content","id","IconButton","iconProps","iconName","title","ariaLabel","disabled","checked","_randomMessageBarType","anEnum","enumValues","Object","keys","map","n","Number","parseInt","filter","isNaN","Math","floor","random","length","randomEnum","MessageBarType","MessageBox","p","randomMessageBarEnum","MessageBar","messageBarType","isMultiline","onDismiss","resetChoice","dismissButtonAriaLabel","target","underline","navStyles","boxSizing","navLinkGroups","links","name","url","icon","key","expandAriaLabel","collapseAriaLabel","isExpanded","Sidebar","borderRight","minWidth","overflow","Nav","onLinkClick","_onLinkClick","selectedKey","groups","ev","item","alert","_items","text","cacheKey","subMenuProps","items","_overflowItems","onClick","_farItems","iconOnly","overflowProps","SiteCommandBar","CommandBar","overflowItems","overflowButtonProps","farItems","classNames","mergeStyleSets","fileIconHeaderIcon","padding","fontSize","fileIconCell","textAlign","selectors","width","visibility","fileIconImg","maxWidth","controlWrapper","flexWrap","exampleToggle","marginBottom","marginRight","selectionDetails","wrapper","position","onRenderDetailsHeader","props","defaultRender","Sticky","stickyPosition","StickyPositionType","isScrollSynced","onRenderColumnHeaderTooltip","tooltipHostProps","DetailsListDocumentsExample","_selection","_allItems","_onChangeModalSelection","setState","isModalSelection","_onChangeText","i","toLowerCase","indexOf","_onColumnClick","column","state","columns","newColumns","slice","currColumn","currCol","forEach","newCol","isSortedDescending","isSorted","announcedMessage","newItems","columnKey","sort","a","b","_copyAndSort","fieldName","now","Date","randomDate","_randomDate","differenceInTime","getTime","date","differenceInDays","trunc","randomFileSize","_randomFileSize","randomFileType","_randomFileIcon","randomSharedStatus","_randomSharedStatus","fileName","_lorem","charAt","toUpperCase","concat","docType","userName","split","join","push","toString","value","fileType","modifiedBy","shared","dateModified","dateFormatted","dateCreatedValue","fileSize","fileSizeRaw","rawSize","modified","_generateDocuments","className","iconClassName","isIconOnly","onColumnClick","onRender","isRowHeader","isResizable","sortAscendingAriaLabel","sortDescendingAriaLabel","data","isPadded","isCollapsible","Selection","onSelectionChanged","_getSelectionDetails","isCompactMode","undefined","this","ScrollablePane","scrollbarVisibility","ScrollbarVisibility","always","DetailsList","compact","selectionMode","SelectionMode","none","getKey","_getKey","setKey","layoutMode","DetailsListLayoutMode","justified","isHeaderVisible","onItemInvoked","_onItemInvoked","constrainMode","ConstrainMode","unconstrained","previousProps","previousState","setAllSelected","index","selectionCount","getSelectedCount","getSelection","React","start","end","valueOf","toLocaleDateString","FILE_ICONS","SHARED_STATUS","LOREM_IPSUM","loremIndex","wordCount","startIndex","numericalSpacingStackTokens","childrenGap","itemsWithHref","isCurrentItem","labelStyles","PageContent","verticalFill","tokens","Breadcrumb","overflowAriaLabel","Pivot","aria-label","PivotItem","headerText","headerButtonProps","Label","Site","size","useState","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","isSmallScreen","ScreenWidthMinUhfMobile","initializeIcons","App","isMessageShown","setShowMessage","useCallback","timer1","setTimeout","clearTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mergeStyles","margin","ReactDOM","render","document","getElementById"],"mappings":"yQAAe,MAA0B,sC,OCmEnCA,EAAe,CAAEC,SAAU,GAEpBC,EAAkC,WAC7C,OACE,eAACC,EAAA,EAAD,CACEC,eAAa,EACbC,YAAU,EACVC,KAAM,EACNC,cAAc,SACdC,gBAAgB,gBAChBC,OAAQ,CACNC,KAAM,CACJC,gBAAiB,UACjBC,OAAQ,OACRC,UAAW,SAVjB,UAcE,cAACV,EAAA,EAAMW,KAAP,CAAYR,KAAM,EAAlB,SACE,cAACS,EAAA,EAAD,CAAMC,KAAK,IAAX,SACE,eAACb,EAAA,EAAD,CAAOE,YAAU,EAACY,MAAM,EAAOV,cAAc,SAA7C,UACE,cAACW,EAAA,EAAD,CAEEC,IAAKC,EACLC,IAAI,iBAEN,cAACC,EAAA,EAAD,CAEEC,QAAS,QACTd,OAAQ,CACNC,KAAM,CACJc,MAAO,UAGXC,QAAM,EACNC,OAAK,EATP,yBACM,sBAeZ,cAACvB,EAAA,EAAMW,KAAP,CAAYR,KAAM,EAAlB,SACE,cAACqB,EAAA,EAAD,CACEC,YAAY,SACZC,SAAU,SAACC,GAAD,OAAcC,QAAQC,IAAI,YAAcF,QAGtD,eAAC3B,EAAA,EAAMW,KAAP,CACER,KAAM,EACNG,OAAQ,CACNC,KAAM,CACJuB,QAAS,OACTC,eAAgB,aALtB,UAUE,cAACC,EAAA,EAAD,CACEC,QAAQ,QAGRC,GAAI,WACJrC,aAAcA,EALhB,SAOE,cAACsC,EAAA,EAAD,CACEC,UAAW,CAAEC,SAAU,UACvBC,MAAM,gBACNC,UAAU,gBACVC,UAAU,EACVC,SAAS,EACTnC,OAAQ,CACNC,KAAM,CACJc,MAAO,cAKf,cAACc,EAAA,EAAD,CACEC,UAAW,CAAEC,SAAU,YACvBC,MAAM,kBACNC,UAAU,kBACVC,UAAU,EACVC,SAAS,EACTnC,OAAQ,CACNC,KAAM,CACJc,MAAO,YAIb,cAACc,EAAA,EAAD,CACEC,UAAW,CAAEC,SAAU,QACvBC,MAAM,cACNC,UAAU,cACVC,UAAU,EACVC,SAAS,EACTnC,OAAQ,CACNC,KAAM,CACJc,MAAO,mB,gBCrJrB,SAASqB,IAEP,OAXF,SAAuBC,GACrB,IAAMC,EAAcC,OAAOC,KAAKH,GAC7BI,KAAI,SAACC,GAAD,OAAOC,OAAOC,SAASF,MAC3BG,QAAO,SAACH,GAAD,OAAQC,OAAOG,MAAMJ,MAG/B,OADwBJ,EADJS,KAAKC,MAAMD,KAAKE,SAAWX,EAAWY,SAM7BC,CAAWC,KAInC,IAAMC,EAAqD,SAACC,GACjE,IAAMC,EAAuBnB,IAC7B,OACE,cAAC1C,EAAA,EAAD,CACEC,eAAa,EACbK,OAAQ,CACNC,KAAM,CACJE,OAAQ,OACRD,gBAAiB,uBALvB,SASE,eAACsD,EAAA,EAAD,CACEC,eAAgBF,EAChBG,aAAa,EACbC,UAAWL,EAAEM,YACbC,uBAAuB,QAJzB,UAMGT,IAAeG,GANlB,eAOE,cAACjD,EAAA,EAAD,CACEC,KAAK,0EACLuD,OAAO,SACPC,WAAS,EAHX,4C,gBC/BFC,EAAiC,CACrC/D,KAAM,CACJgE,UAAW,eAITC,EAAiC,CACrC,CACEC,MAAO,CACL,CACEC,KAAM,QACNC,IAAK,GACLC,KAAM,mBACNC,IAAK,SACLT,OAAQ,UAEV,CACEM,KAAM,QACNC,IAAK,GACLC,KAAM,mBACNC,IAAK,SACLT,OAAQ,UAEV,CACEM,KAAM,QACNC,IAAK,GACLC,KAAM,mBACNC,IAAK,SACLT,OAAQ,UAEV,CACEM,KAAM,cACNC,IAAK,GACLG,gBAAiB,+BACjBC,kBAAmB,+BACnBN,MAAO,CACL,CACEC,KAAM,QACNC,IAAK,GACLE,IAAK,iBACLT,OAAQ,WAGZY,YAAY,GAEd,CACEN,KAAM,cACNC,IAAK,GACLG,gBAAiB,sBACjBC,kBAAmB,wBACnBN,MAAO,CACL,CACEC,KAAM,QACNC,IAAK,GACLE,IAAK,iBACLT,OAAQ,UAEV,CACEM,KAAM,QACNC,IAAK,GACLE,IAAK,iBACLT,OAAQ,WAGZY,YAAY,GAEd,CACEN,KAAM,QACNC,IAAK,GACLE,IAAK,iBACLT,OAAQ,UAEV,CACEM,KAAM,QACNC,IAAK,GACLE,IAAK,iBACLT,OAAQ,UAEV,CACEM,KAAM,QACNC,IAAK,GACLE,IAAK,iBACLT,OAAQ,UAEV,CACEM,KAAM,QACNC,IAAK,GACLE,IAAK,iBACLT,OAAQ,UAEV,CACEM,KAAM,QACNC,IAAK,GACLE,IAAK,iBACLT,OAAQ,UAEV,CACEM,KAAM,QACNC,IAAK,GACLE,IAAK,iBACLT,OAAQ,aAMHa,EAAmC,WAC9C,OACE,cAACjF,EAAA,EAAD,CACEC,eAAa,EACbI,gBAAgB,UAChBF,KAAM,EACNG,OAAQ,CACNC,KAAM,CACJC,gBAAiB,UACjB0E,YAAa,oBACbC,SAAU,QACVC,SAAU,YAThB,SAaE,cAACC,EAAA,EAAD,CACEC,YAAaC,EACbC,YAAY,SACZlF,OAAQgE,EACRmB,OAAQjB,OAMhB,SAASe,EAAaG,EAAoCC,GACpDA,GAAsB,SAAdA,EAAKjB,MACfkB,MAAM,qB,qBCxIJC,EAAiC,CACrC,CACEhB,IAAK,WACLiB,KAAM,UACN1D,UAAW,CAAEC,SAAU,cACvBxB,KAAM,IAER,CACEgE,IAAK,WACLiB,KAAM,UACN1D,UAAW,CAAEC,SAAU,cACvBxB,KAAM,IAER,CACEgE,IAAK,WACLiB,KAAM,UACN1D,UAAW,CAAEC,SAAU,cACvBxB,KAAM,IAER,CACEgE,IAAK,WACLiB,KAAM,UACN1D,UAAW,CAAEC,SAAU,cACvBxB,KAAM,IAER,CACEgE,IAAK,WACLiB,KAAM,UACN1D,UAAW,CAAEC,SAAU,cACvBxB,KAAM,IAER,CACEgE,IAAK,UACLiB,KAAM,UACNC,SAAU,aACV3D,UAAW,CAAEC,SAAU,cACvB2D,aAAc,CACZC,MAAO,CAAC,aAEJpB,IAAK,eACLiB,KAAM,gBACN1D,UAAW,CAAEC,SAAU,SAEtB,qBAAuB,kBAE1B,CACEwC,IAAK,gBACLiB,KAAM,iBACN1D,UAAW,CAAEC,SAAU,iBAO3B6D,EAAyC,CAC7C,CACErB,IAAK,OACLiB,KAAM,aACNK,QAAS,kBAAMvE,QAAQC,IAAI,YAC3BO,UAAW,CAAEC,SAAU,iBAEzB,CACEwC,IAAK,OACLiB,KAAM,aACNK,QAAS,kBAAMvE,QAAQC,IAAI,YAC3BO,UAAW,CAAEC,SAAU,SAEzB,CACEwC,IAAK,SACLiB,KAAM,YACNK,QAAS,kBAAMvE,QAAQC,IAAI,WAC3BO,UAAW,CAAEC,SAAU,UAIrB+D,EAAoC,CACxC,CACEvB,IAAK,QACLiB,KAAM,OAENvD,UAAW,OACX8D,UAAU,EACVjE,UAAW,CAAEC,SAAU,cACvB8D,QAAS,kBAAMvE,QAAQC,IAAI,WAE7B,CACEgD,IAAK,QACLiB,KAAM,OAENvD,UAAW,OACX8D,UAAU,EACVjE,UAAW,CAAEC,SAAU,cACvB8D,QAAS,kBAAMvE,QAAQC,IAAI,WAE7B,CACEgD,IAAK,QACLiB,KAAM,OAENvD,UAAW,OACX8D,UAAU,EACVjE,UAAW,CAAEC,SAAU,cACvB8D,QAAS,kBAAMvE,QAAQC,IAAI,YAIzByE,EAA8B,CAClC/D,UAAW,gBACXH,UAAW,CAAEC,SAAU,eAGZkE,EAA0C,WACrD,OACE,cAACC,EAAA,EAAD,CACEP,MAAOJ,EACPY,cAAeP,EACfQ,oBAAqBJ,EACrBK,SAAUP,EACV7D,UAAU,gE,8ICzGVqE,EAAaC,YAAe,CAChCC,mBAAoB,CAClBC,QAAS,EACTC,SAAU,QAEZC,aAAc,CACZC,UAAW,SACXC,UAAW,CACT,WAAY,CACVlF,QAAS,IACTH,QAAS,eACT1B,cAAe,SACfK,OAAQ,OACR2G,MAAO,MACPC,WAAY,YAIlBC,YAAa,CACXlH,cAAe,SACfM,UAAW,OACX6G,SAAU,QAEZC,eAAgB,CACd1F,QAAS,OACT2F,SAAU,QAEZC,cAAe,CACb5F,QAAS,eACT6F,aAAc,OACdC,YAAa,QAEfC,iBAAkB,CAChBF,aAAc,QAEhBG,QAAS,CACPrH,OAAQ,OACRsH,SAAU,WACVvH,gBAAiB,WA4BfwH,GAA8D,SAClEC,EACAC,GAEA,IAAKD,EACH,OAAO,KAKT,OACE,cAACE,EAAA,EAAD,CAAQC,eAAgBC,IAAmBtI,OAAQuI,gBAAc,EAAjE,SACGJ,EAAa,2BACTD,GADS,IAEZM,4BAPiF,SACrFC,GADqF,OAElF,cAACxG,EAAA,EAAD,eAAiBwG,WAWXC,GAAb,kDAOE,WAAYR,GAAY,IAAD,uBACrB,cAAMA,IAJAS,gBAGe,IAFfC,eAEe,IAgMfC,wBAA0B,SAChClD,EACAjD,GAEA,EAAKoG,SAAS,CAAEC,iBAAkBrG,KApMb,EAuMfsG,cAAgB,SACtBrD,EACAI,GAEA,EAAK+C,SAAS,CACZ5C,MAAOH,EACH,EAAK6C,UAAUxF,QAAO,SAAC6F,GAAD,OAAOA,EAAEtE,KAAKuE,cAAcC,QAAQpD,IAAS,KACnE,EAAK6C,aA9MU,EAsOfQ,eAAiB,SACvBzD,EACA0D,GACU,IAAD,EACkB,EAAKC,MAAxBC,EADC,EACDA,QAASrD,EADR,EACQA,MACXsD,EAAwBD,EAAQE,QAChCC,EAAsBF,EAAWpG,QACrC,SAACuG,GAAD,OAAaN,EAAOvE,MAAQ6E,EAAQ7E,OACpC,GACF0E,EAAWI,SAAQ,SAACC,GACdA,IAAWH,GACbA,EAAWI,oBAAsBJ,EAAWI,mBAC5CJ,EAAWK,UAAW,EACtB,EAAKjB,SAAS,CACZkB,iBAAiB,GAAD,OAAKN,EAAW/E,KAAhB,sBACd+E,EAAWI,mBAAqB,aAAe,iBAInDD,EAAOE,UAAW,EAClBF,EAAOC,oBAAqB,MAGhC,IAAMG,EAYV,SACE/D,EACAgE,EACAJ,GAEA,IAAMhF,EAAMoF,EACZ,OAAOhE,EACJuD,MAAM,GACNU,MAAK,SAACC,EAAMC,GAAP,OACHP,EAAqBM,EAAEtF,GAAOuF,EAAEvF,GAAOsF,EAAEtF,GAAOuF,EAAEvF,IAAQ,GAAK,KArBjDwF,CACfpE,EACAwD,EAAWa,UACXb,EAAWI,oBAEb,EAAKhB,SAAS,CACZS,QAASC,EACTtD,MAAO+D,KAjQT,EAAKrB,UAmRT,WAIE,IAHA,IAAM1C,EAAqB,GACvBsE,EAAM,IAAIC,KAELxB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAMyB,EAAaC,GAAY,IAAIF,KAAK,KAAM,EAAG,GAAI,IAAIA,MACrDG,EAAmBJ,EAAIK,UAAYH,EAAWI,KAAKD,UACjDE,EAAmBzH,KAAK0H,MAAMJ,EAAgB,OAC9CK,EAAiBC,KACjBC,EAAiBC,KACjBC,EAAqBC,KACvBC,EAAWC,GAAO,GACtBD,EACEA,EAASE,OAAO,GAAGC,cACnBH,EAAS9B,MAAM,GAAGkC,OAAlB,WAA6BR,EAAeS,UAC9C,IAAIC,EAAWL,GAAO,GACtBK,EAAWA,EACRC,MAAM,KACN9I,KAAI,SAAC2B,GAAD,OAAkBA,EAAK8G,OAAO,GAAGC,cAAgB/G,EAAK8E,MAAM,MAChEsC,KAAK,KACR7F,EAAM8F,KAAK,CACTlH,IAAKmE,EAAEgD,WACPtH,KAAM4G,EACNW,MAAOX,EACPjJ,SAAU6I,EAAevG,IACzBuH,SAAUhB,EAAeS,QACzBQ,WAAYP,EACZQ,OAAQhB,EACRiB,aAAc5B,EAAW6B,cACzBC,iBAAkB9B,EAAWwB,MAC7BO,SAAUxB,EAAeiB,MACzBQ,YAAazB,EAAe0B,QAC5BC,SAAS,GAAD,OAAK7B,EAAL,eAGZ,OAAO7E,EAtTY2G,GAEjB,IAAMtD,EAAqB,CACzB,CACEzE,IAAK,UACLH,KAAM,YACNmI,UAAWjG,EAAWK,aACtB6F,cAAelG,EAAWE,mBAC1BvE,UACE,8DACFF,SAAU,OACV0K,YAAY,EACZzC,UAAW,OACXnF,SAAU,GACVoC,SAAU,GACVyF,cAAe,EAAK7D,eACpB8D,SAAU,SAACtH,GAAD,OACR,cAAC3D,EAAA,EAAD,CAAaC,QAAO,UAAK0D,EAAKuG,SAAV,SAApB,SACE,qBACElL,IAAK2E,EAAKtD,SACVwK,UAAWjG,EAAWU,YACtBpG,IAAG,UAAKyE,EAAKuG,SAAV,oBAKX,CACErH,IAAK,UACLH,KAAM,OACN4F,UAAW,OACXnF,SAAU,IACVoC,SAAU,IACV2F,aAAa,EACbC,aAAa,EACbrD,UAAU,EACVD,oBAAoB,EACpBuD,uBAAwB,gBACxBC,wBAAyB,gBACzBL,cAAe,EAAK7D,eACpBmE,KAAM,SACNC,UAAU,GAEZ,CACE1I,IAAK,UACLH,KAAM,eACN4F,UAAW,mBACXnF,SAAU,GACVoC,SAAU,GACV4F,aAAa,EACbH,cAAe,EAAK7D,eACpBmE,KAAM,SACNL,SAAU,SAACtH,GACT,OAAO,+BAAOA,EAAK0G,gBAErBkB,UAAU,GAEZ,CACE1I,IAAK,UACLH,KAAM,cACN4F,UAAW,aACXnF,SAAU,GACVoC,SAAU,GACV4F,aAAa,EACbK,eAAe,EACfF,KAAM,SACNN,cAAe,EAAK7D,eACpB8D,SAAU,SAACtH,GACT,OAAO,+BAAOA,EAAKwG,cAErBoB,UAAU,GAEZ,CACE1I,IAAK,UACLH,KAAM,SACN4F,UAAW,cACXnF,SAAU,GACVoC,SAAU,GACV4F,aAAa,EACbH,cAAe,EAAK7D,eACpBmE,KAAM,SACNL,SAAU,SAACtH,GACT,OAAO,+BAAOA,EAAKyG,UAErBmB,UAAU,GAEZ,CACE1I,IAAK,UACLH,KAAM,WACN4F,UAAW,gBACXnF,SAAU,GACVoC,SAAU,IACV4F,aAAa,EACbH,cAAe,EAAK7D,eACpBmE,KAAM,SACNL,SAAU,SAACtH,GACT,OAAO,+BAAOA,EAAKgH,YAErBY,UAAU,GAEZ,CACE1I,IAAK,UACLH,KAAM,YACN4F,UAAW,cACXnF,SAAU,GACVoC,SAAU,GACV4F,aAAa,EACbK,eAAe,EACfF,KAAM,SACNN,cAAe,EAAK7D,eACpB8D,SAAU,SAACtH,GACT,OAAO,+BAAOA,EAAK6G,aAGvB,CACE3H,IAAK,UACLH,KAAM,QACN4F,UAAW,QACXnF,SAAU,GACVoC,SAAU,GACV4F,aAAa,EACbK,eAAe,EACfF,KAAM,SACNN,cAAe,EAAK7D,eACpB8D,SAAU,SAACtH,GACT,OAAO,+BAAO,gBAEhB4H,UAAU,IAjIO,OAqIrB,EAAK7E,WAAa,IAAI+E,IAAU,CAC9BC,mBAAoB,WAClB,EAAK7E,SAAS,CACZhB,iBAAkB,EAAK8F,4BAK7B,EAAKtE,MAAQ,CACXpD,MAAO,EAAK0C,UACZW,QAASA,EACTzB,iBAAkB,EAAK8F,uBACvB7E,kBAAkB,EAClB8E,eAAe,EACf7D,sBAAkB8D,GAnJC,EAPzB,0CA8JE,WAAiB,IAAD,EAC4BC,KAAKzE,MAAvCC,EADM,EACNA,QAASsE,EADH,EACGA,cAAe3H,EADlB,EACkBA,MAEhC,OACE,cAAC8H,EAAA,EAAD,CACEC,oBAAqBC,IAAoBC,OACzCrB,UAAWjG,EAAWkB,QAFxB,SAIE,cAACqG,EAAA,EAAD,CACElI,MAAOA,EACPmI,QAASR,EACTtE,QAASA,EACT+E,cAAeC,IAAcC,KAC7BC,OAAQV,KAAKW,QACbC,OAAO,OACPC,WAAYC,IAAsBC,UAClCC,iBAAiB,EACjBC,cAAejB,KAAKkB,eACpBC,cAAeC,IAAcC,cAC7BnH,sBAAuBA,SAjLjC,gCAuLE,SACEoH,EACAC,GAGEA,EAAcvG,mBAAqBgF,KAAKzE,MAAMP,kBAC7CgF,KAAKzE,MAAMP,kBAEZgF,KAAKpF,WAAW4G,gBAAe,KA/LrC,qBAmME,SAAgB3J,EAAW4J,GACzB,OAAO5J,EAAKd,MApMhB,4BAyNE,SAAuBc,GACrBC,MAAM,iBAAD,OAAkBD,EAAKjB,SA1NhC,kCA6NE,WACE,IAAM8K,EAAiB1B,KAAKpF,WAAW+G,mBAEvC,OAAQD,GACN,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MACE,oBACC1B,KAAKpF,WAAWgH,eAAe,GAAiBhL,KAErD,QACE,MAAM,GAAN,OAAU8K,EAAV,wBAzOR,GAAiDG,aAmUjD,SAASjF,GACPkF,EACAC,GAEA,IAAMhF,EAAa,IAAIL,KACrBoF,EAAMhF,UAAYvH,KAAKE,UAAYsM,EAAIjF,UAAYgF,EAAMhF,YAE3D,MAAO,CACLqB,MAAOpB,EAAKiF,UACZxD,cAAezB,EAAKkF,qBACpBlF,KAAMA,GAIV,IAAMmF,GAAiC,CACrC,CAAEtL,KAAM,SACR,CAAEA,KAAM,SACR,CAAEA,KAAM,QACR,CAAEA,KAAM,OACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,OACR,CAAEA,KAAM,OACR,CAAEA,KAAM,SACR,CAAEA,KAAM,OACR,CAAEA,KAAM,UACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,OACR,CAAEA,KAAM,SACR,CAAEA,KAAM,QACR,CAAEA,KAAM,gBACR,CAAEA,KAAM,QACR,CAAEA,KAAM,OACR,CAAEA,KAAM,OACR,CAAEA,KAAM,eACR,CAAEA,KAAM,OACR,CAAEA,KAAM,UACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QAGJuL,GAAoC,CACxC,CAAEvL,KAAM,WACR,CAAEA,KAAM,UACR,CAAEA,KAAM,WAGV,SAASyG,KACP,IAAMQ,EACJqE,GAAW3M,KAAKC,MAAMD,KAAKE,SAAWyM,GAAWxM,SAASkB,KAC5D,MAAO,CACLiH,UACAhH,IAAI,0EAAD,OAA4EgH,EAA5E,SAIP,SAASV,KACP,IAAMuB,EAAmBnJ,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GAC3D,MAAO,CACL0I,MAAM,GAAD,OAAKO,EAAL,OACLE,QAASF,GAIb,SAASnB,KAGP,OADE4E,GAAc5M,KAAKC,MAAMD,KAAKE,SAAW0M,GAAczM,SAASkB,KAIpE,IAAMwL,GAAc,8ZAKlBrE,MAAM,KACJsE,GAAa,EACjB,SAAS5E,GAAO6E,GACd,IAAMC,EACJF,GAAaC,EAAYF,GAAY1M,OAAS,EAAI2M,GAEpD,OADAA,GAAaE,EAAaD,EACnBF,GAAY1G,MAAM6G,EAAYF,IAAYrE,KAAK,KCpfxD,IAAMwE,GAA4C,CAChDC,YAAa,GAEbxJ,QAAS,SAGLyJ,GAAmC,CAGvC,CACE1K,KAAM,cACNjB,IAAK,KACLhE,KACE,0EACFuD,OAAQ,UAEV,CAAE0B,KAAM,cAAejB,IAAK,MAC5B,CACEiB,KAAM,cACNjB,IAAK,aACLhE,KACE,0EACFuD,OAAQ,SACRqM,eAAe,IAIbC,GAAgD,CACpDnQ,KAAM,IAGKoQ,GAAuC,WAClD,OACE,cAAC3Q,EAAA,EAAD,CACE4Q,cAAY,EACZC,OAAQP,GACRhQ,OAAQ,CACNC,KAAM,IAJV,SASE,eAACP,EAAA,EAAD,WACE,cAACA,EAAA,EAAMW,KAAP,UACE,cAACmQ,EAAA,EAAD,CACE7K,MAAOuK,GACPjO,UAAU,0CACVwO,kBAAkB,iBAGtB,cAAC/Q,EAAA,EAAMW,KAAP,UACE,eAACqQ,EAAA,EAAD,CACEC,aAAW,sBACX3Q,OAAQ,CACNC,KAAM,CAEJoH,aAAc,KALpB,UASE,cAACuJ,EAAA,EAAD,CACEC,WAAW,MACXC,kBAAmB,CACjB,aAAc,EACd,aAAc,aAJlB,SAOE,cAAC,GAAD,MAEF,cAACF,EAAA,EAAD,CAAWC,WAAW,MAAtB,SACE,cAACE,EAAA,EAAD,CAAO/Q,OAAQoQ,GAAf,wBAEF,cAACQ,EAAA,EAAD,CAAWC,WAAW,MAAtB,SACE,cAACE,EAAA,EAAD,CAAO/Q,OAAQoQ,GAAf,mCChFP,IAAMY,GAAgC,WAC3C,IAAMC,ECAD,WAAsC,MAGPC,mBAAsB,CACxDpK,WAAOyG,EACPpN,YAAQoN,IALiC,mBAGpC4D,EAHoC,KAGxBC,EAHwB,KA4B3C,OApBAC,qBAAU,WAER,SAASC,IAEPF,EAAc,CACZtK,MAAOyK,OAAOC,WACdrR,OAAQoR,OAAOE,cAWnB,OANAF,OAAOG,iBAAiB,SAAUJ,GAGlCA,IAGO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IAEIH,ED5BMS,GACPC,EAAgBZ,EAAKnK,OAASmK,EAAKnK,MAAQgL,IAEjD,OACE,eAACpS,EAAA,EAAD,CACEE,YAAU,EACVI,OAAQ,CACNC,KAAM,IAHV,WAQI4R,GAAiB,cAAC,EAAD,IAEnB,eAACnS,EAAA,EAAD,CACEG,KAAM,EACNG,OAAQ,CACNC,KAAM,IAHV,UAQE,cAAC,EAAD,IACA,cAAC,GAAD,W,UEvBR8R,eAEO,IAAMC,GAA+B,WAAO,IAAD,EACP3C,IAAM6B,UAAkB,GADjB,mBACzCe,EADyC,KACzBC,EADyB,KAG1CtO,EAAcyL,IAAM8C,aAAY,WACpC7Q,QAAQC,IAAI,gBACZ2Q,GAAe,KACd,IAqBH,OAnBA7C,IAAMgC,WACJ,WACE,IAAIe,EAASC,YAAW,kBAAMH,GAAe,KAAO,KAKpD,OAAO,WACLI,aAAaF,MAQjB,CAACH,IAID,eAACvS,EAAA,EAAD,CACE4Q,cAAY,EACZtQ,OAAQ,CACNC,KAAM,IAHV,UAQE,cAAC,EAAD,IACCgS,GAAkB,cAAC,EAAD,CAAYrO,YAAaA,IAC5C,cAAC,GAAD,QClCS2O,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,YAAY,CACV,2BAA4B,CAC1BC,OAAQ,EACRxM,QAAS,EACTtG,OAAQ,WAIZ+S,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SAKjDd,O","file":"static/js/main.946ef321.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Framelogo.ab636c84.svg\";","import * as React from \"react\";\nimport {\n  CommandBar,\n  ICommandBarItemProps,\n  Image,\n  Link,\n  SearchBox,\n  Stack,\n  Text,\n  IconButton,\n  IIconProps,\n  TooltipHost,\n} from \"@fluentui/react\";\n\nimport framelogo from \"../Framelogo.svg\";\n\nconst _items: ICommandBarItemProps[] = [\n  {\n    key: \"info1\",\n    text: \"Product name\",\n    // This needs an ariaLabel since it's icon-only\n    ariaLabel: \"Info\",\n    href: \"/\",\n    onClick: () => console.log(\"Info1\"),\n  },\n];\n\nconst _farItems: ICommandBarItemProps[] = [\n  {\n    key: \"info1\",\n    text: \"Info\",\n    // This needs an ariaLabel since it's icon-only\n    ariaLabel: \"Info\",\n    iconOnly: true,\n    iconProps: { iconName: \"CircleRing\" },\n    onClick: () => console.log(\"Info1\"),\n  },\n  {\n    key: \"info1\",\n    text: \"Info\",\n    // This needs an ariaLabel since it's icon-only\n    ariaLabel: \"Info\",\n    iconOnly: true,\n    iconProps: { iconName: \"CircleRing\" },\n    onClick: () => console.log(\"Info1\"),\n  },\n  {\n    key: \"info3\",\n    text: \"Info\",\n    // This needs an ariaLabel since it's icon-only\n    ariaLabel: \"Info\",\n    iconOnly: true,\n    iconProps: { iconName: \"CircleRing\" },\n    onClick: () => console.log(\"Info1\"),\n  },\n  {\n    key: \"info4\",\n    text: \"Info\",\n    // This needs an ariaLabel since it's icon-only\n    ariaLabel: \"Info\",\n    iconOnly: true,\n    iconProps: { iconName: \"CircleRing\" },\n    onClick: () => console.log(\"Info1\"),\n  },\n];\n\nconst emojiIcon: IIconProps = { iconName: \"Emoji2\" };\nconst calloutProps = { gapSpace: 0 };\n\nexport const Header: React.FunctionComponent = () => {\n  return (\n    <Stack\n      disableShrink\n      horizontal\n      grow={1}\n      verticalAlign=\"center\"\n      horizontalAlign=\"space-between\"\n      styles={{\n        root: {\n          backgroundColor: \"#0078D4\", // header blue\n          height: \"49px\",\n          maxHeight: \"49px\",\n        },\n      }}\n    >\n      <Stack.Item grow={3}>\n        <Link href=\"/\">\n          <Stack horizontal wrap={false} verticalAlign=\"center\">\n            <Image\n              // src=\"http://placehold.it/48x48.png\"\n              src={framelogo}\n              alt=\"product logo\"\n            />\n            <Text\n              key=\"productName\"\n              variant={\"large\"}\n              styles={{\n                root: {\n                  color: \"white\", // header blue\n                },\n              }}\n              nowrap\n              block\n            >\n              Product name\n            </Text>\n          </Stack>\n        </Link>\n      </Stack.Item>\n      <Stack.Item grow={6}>\n        <SearchBox\n          placeholder=\"Search\"\n          onSearch={(newValue) => console.log(\"value is \" + newValue)}\n        />\n      </Stack.Item>\n      <Stack.Item\n        grow={3}\n        styles={{\n          root: {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            //backgroundColor: \"yellow\",\n          },\n        }}\n      >\n        <TooltipHost\n          content=\"Emoji\"\n          // This id is used on the tooltip itself, not the host\n          // (so an element with this id only exists when the tooltip is shown)\n          id={\"tooltip1\"}\n          calloutProps={calloutProps}\n        >\n          <IconButton\n            iconProps={{ iconName: \"Ringer\" }}\n            title=\"Button ringer\"\n            ariaLabel=\"Button ringer\"\n            disabled={false}\n            checked={false}\n            styles={{\n              root: {\n                color: \"white\",\n              },\n            }}\n          />\n        </TooltipHost>\n        <IconButton\n          iconProps={{ iconName: \"Settings\" }}\n          title=\"Button settings\"\n          ariaLabel=\"Button settings\"\n          disabled={false}\n          checked={false}\n          styles={{\n            root: {\n              color: \"white\",\n            },\n          }}\n        />\n        <IconButton\n          iconProps={{ iconName: \"Help\" }}\n          title=\"Button help\"\n          ariaLabel=\"Button help\"\n          disabled={false}\n          checked={false}\n          styles={{\n            root: {\n              color: \"white\",\n            },\n          }}\n        />\n        {/* <CommandBar\n          // hacky but I could not apply justifyContent flex-end to the items\n          items={[]}\n          farItems={_farItems}\n          styles={{\n            root: {\n              justifyContent: \"flex-end\",\n              //backgroundColor: \"yellow\",\n            },\n          }}\n        /> */}\n      </Stack.Item>\n    </Stack>\n  );\n};\n","import * as React from \"react\";\nimport { Stack, Link, MessageBar, MessageBarType } from \"@fluentui/react\";\n\ninterface IExampleProps {\n  resetChoice?: () => void;\n}\n\nfunction randomEnum<T>(anEnum: T): T[keyof T] {\n  const enumValues = (Object.keys(anEnum)\n    .map((n) => Number.parseInt(n))\n    .filter((n) => !Number.isNaN(n)) as unknown) as T[keyof T][];\n  const randomIndex = Math.floor(Math.random() * enumValues.length);\n  const randomEnumValue = enumValues[randomIndex];\n  return randomEnumValue;\n}\n\nfunction _randomMessageBarType(): MessageBarType {\n  const randomMessageBarEnum = randomEnum(MessageBarType);\n  return randomMessageBarEnum;\n}\n\nexport const MessageBox: React.FunctionComponent<IExampleProps> = (p) => {\n  const randomMessageBarEnum = _randomMessageBarType();\n  return (\n    <Stack\n      disableShrink\n      styles={{\n        root: {\n          height: \"35px\",\n          backgroundColor: \"rgb(243, 242, 241)\",\n        },\n      }}\n    >\n      <MessageBar\n        messageBarType={randomMessageBarEnum}\n        isMultiline={false}\n        onDismiss={p.resetChoice}\n        dismissButtonAriaLabel=\"Close\"\n      >\n        {MessageBarType[randomMessageBarEnum]} MessageBar.\n        <Link\n          href=\"https://developer.microsoft.com/en-us/fluentui#/controls/web/messagebar\"\n          target=\"_blank\"\n          underline\n        >\n          Visit Fluent UI website.\n        </Link>\n      </MessageBar>\n    </Stack>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Stack,\n  Nav,\n  INavLink,\n  INavStyles,\n  INavLinkGroup,\n} from \"@fluentui/react\";\n\nconst navStyles: Partial<INavStyles> = {\n  root: {\n    boxSizing: \"border-box\",\n  },\n};\n\nconst navLinkGroups: INavLinkGroup[] = [\n  {\n    links: [\n      {\n        name: \"Title\",\n        url: \"\",\n        icon: \"StatusCircleRing\",\n        key: \"title1\",\n        target: \"_blank\",\n      },\n      {\n        name: \"Title\",\n        url: \"\",\n        icon: \"StatusCircleRing\",\n        key: \"title2\",\n        target: \"_blank\",\n      },\n      {\n        name: \"Title\",\n        url: \"\",\n        icon: \"StatusCircleRing\",\n        key: \"title3\",\n        target: \"_blank\",\n      },\n      {\n        name: \"Group title\",\n        url: \"\",\n        expandAriaLabel: \"Collapse Group title section\",\n        collapseAriaLabel: \"Collapse Group title section\",\n        links: [\n          {\n            name: \"Title\",\n            url: \"\",\n            key: \"keyInnerTitle1\",\n            target: \"_blank\",\n          },\n        ],\n        isExpanded: false,\n      },\n      {\n        name: \"Group title\",\n        url: \"\",\n        expandAriaLabel: \"Expand Home section\",\n        collapseAriaLabel: \"Collapse Home section\",\n        links: [\n          {\n            name: \"Title\",\n            url: \"\",\n            key: \"keyInnerTitle1\",\n            target: \"_blank\",\n          },\n          {\n            name: \"Title\",\n            url: \"\",\n            key: \"keyInnerTitle2\",\n            target: \"_blank\",\n          },\n        ],\n        isExpanded: true,\n      },\n      {\n        name: \"Title\",\n        url: \"\",\n        key: \"keyLowerTitle1\",\n        target: \"_blank\",\n      },\n      {\n        name: \"Title\",\n        url: \"\",\n        key: \"keyLowerTitle2\",\n        target: \"_blank\",\n      },\n      {\n        name: \"Title\",\n        url: \"\",\n        key: \"keyLowerTitle3\",\n        target: \"_blank\",\n      },\n      {\n        name: \"Title\",\n        url: \"\",\n        key: \"keyLowerTitle4\",\n        target: \"_blank\",\n      },\n      {\n        name: \"Title\",\n        url: \"\",\n        key: \"keyLowerTitle5\",\n        target: \"_blank\",\n      },\n      {\n        name: \"Title\",\n        url: \"\",\n        key: \"keyLowerTitle6\",\n        target: \"_blank\",\n      },\n    ],\n  },\n];\n\nexport const Sidebar: React.FunctionComponent = () => {\n  return (\n    <Stack\n      disableShrink\n      horizontalAlign=\"stretch\"\n      grow={0}\n      styles={{\n        root: {\n          backgroundColor: \"#FFFFFF\",\n          borderRight: \"1px solid #EDEBE9\", // divider\n          minWidth: \"229px\",\n          overflow: \"visible\",\n        },\n      }}\n    >\n      <Nav\n        onLinkClick={_onLinkClick}\n        selectedKey=\"title1\"\n        styles={navStyles}\n        groups={navLinkGroups}\n      />\n    </Stack>\n  );\n};\n\nfunction _onLinkClick(ev?: React.MouseEvent<HTMLElement>, item?: INavLink) {\n  if (item && item.name === \"News\") {\n    alert(\"News link clicked\");\n  }\n}\n","import * as React from \"react\";\nimport {\n  IButtonProps,\n  CommandBar,\n  ICommandBarItemProps,\n} from \"@fluentui/react\";\nconst _items: ICommandBarItemProps[] = [\n  {\n    key: \"command1\",\n    text: \"Command\",\n    iconProps: { iconName: \"CircleRing\" },\n    href: \"\",\n  },\n  {\n    key: \"command2\",\n    text: \"Command\",\n    iconProps: { iconName: \"CircleRing\" },\n    href: \"\",\n  },\n  {\n    key: \"command3\",\n    text: \"Command\",\n    iconProps: { iconName: \"CircleRing\" },\n    href: \"\",\n  },\n  {\n    key: \"command4\",\n    text: \"Command\",\n    iconProps: { iconName: \"CircleRing\" },\n    href: \"\",\n  },\n  {\n    key: \"command5\",\n    text: \"Command\",\n    iconProps: { iconName: \"CircleRing\" },\n    href: \"\",\n  },\n  {\n    key: \"newItem\",\n    text: \"Command\",\n    cacheKey: \"myCacheKey\", // changing this key will invalidate this item's cache\n    iconProps: { iconName: \"CircleRing\" },\n    subMenuProps: {\n      items: [\n        {\n          key: \"emailMessage\",\n          text: \"Email message\",\n          iconProps: { iconName: \"Mail\" },\n          // eslint-disable-next-line no-useless-computed-key\n          [\"data-automation-id\"]: \"newEmailButton\", // optional\n        },\n        {\n          key: \"calendarEvent\",\n          text: \"Calendar event\",\n          iconProps: { iconName: \"Calendar\" },\n        },\n      ],\n    },\n  },\n];\n\nconst _overflowItems: ICommandBarItemProps[] = [\n  {\n    key: \"move\",\n    text: \"Move to...\",\n    onClick: () => console.log(\"Move to\"),\n    iconProps: { iconName: \"MoveToFolder\" },\n  },\n  {\n    key: \"copy\",\n    text: \"Copy to...\",\n    onClick: () => console.log(\"Copy to\"),\n    iconProps: { iconName: \"Copy\" },\n  },\n  {\n    key: \"rename\",\n    text: \"Rename...\",\n    onClick: () => console.log(\"Rename\"),\n    iconProps: { iconName: \"Edit\" },\n  },\n];\n\nconst _farItems: ICommandBarItemProps[] = [\n  {\n    key: \"info1\",\n    text: \"Info\",\n    // This needs an ariaLabel since it's icon-only\n    ariaLabel: \"Info\",\n    iconOnly: true,\n    iconProps: { iconName: \"CircleRing\" },\n    onClick: () => console.log(\"Info1\"),\n  },\n  {\n    key: \"info2\",\n    text: \"Info\",\n    // This needs an ariaLabel since it's icon-only\n    ariaLabel: \"Info\",\n    iconOnly: true,\n    iconProps: { iconName: \"CircleRing\" },\n    onClick: () => console.log(\"Info2\"),\n  },\n  {\n    key: \"info3\",\n    text: \"Info\",\n    // This needs an ariaLabel since it's icon-only\n    ariaLabel: \"Info\",\n    iconOnly: true,\n    iconProps: { iconName: \"CircleRing\" },\n    onClick: () => console.log(\"Info3\"),\n  },\n];\n\nconst overflowProps: IButtonProps = {\n  ariaLabel: \"More commands\",\n  iconProps: { iconName: \"CircleRing\" },\n};\n\nexport const SiteCommandBar: React.FunctionComponent = () => {\n  return (\n    <CommandBar\n      items={_items}\n      overflowItems={_overflowItems}\n      overflowButtonProps={overflowProps}\n      farItems={_farItems}\n      ariaLabel=\"Use left and right arrow keys to navigate between commands\"\n    />\n  );\n};\n","import * as React from \"react\";\nimport {\n  DetailsList,\n  DetailsListLayoutMode,\n  Selection,\n  SelectionMode,\n  IColumn,\n  ScrollablePane,\n  ScrollbarVisibility,\n  Sticky,\n  StickyPositionType,\n  IRenderFunction,\n  IDetailsHeaderProps,\n  IDetailsColumnRenderTooltipProps,\n  ConstrainMode,\n  mergeStyleSets,\n  TooltipHost,\n} from \"@fluentui/react\";\n\nconst classNames = mergeStyleSets({\n  fileIconHeaderIcon: {\n    padding: 0,\n    fontSize: \"16px\",\n  },\n  fileIconCell: {\n    textAlign: \"center\",\n    selectors: {\n      \"&:before\": {\n        content: \".\",\n        display: \"inline-block\",\n        verticalAlign: \"middle\",\n        height: \"100%\",\n        width: \"0px\",\n        visibility: \"hidden\",\n      },\n    },\n  },\n  fileIconImg: {\n    verticalAlign: \"middle\",\n    maxHeight: \"16px\",\n    maxWidth: \"16px\",\n  },\n  controlWrapper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  exampleToggle: {\n    display: \"inline-block\",\n    marginBottom: \"10px\",\n    marginRight: \"30px\",\n  },\n  selectionDetails: {\n    marginBottom: \"20px\",\n  },\n  wrapper: {\n    height: \"80vh\",\n    position: \"relative\",\n    backgroundColor: \"white\",\n  },\n});\n\nexport interface IDetailsListDocumentsExampleState {\n  columns: IColumn[];\n  items: IDocument[];\n  selectionDetails: string;\n  isModalSelection: boolean | undefined;\n  isCompactMode: boolean | undefined;\n  announcedMessage?: string;\n}\n\nexport interface IDocument {\n  key: string;\n  name: string;\n  value: string;\n  iconName: string;\n  fileType: string;\n  modifiedBy: string;\n  dateModified: string;\n  dateCreatedValue: number;\n  shared: string;\n  modified: string;\n  fileSize: string;\n  fileSizeRaw: number;\n}\n\nconst onRenderDetailsHeader: IRenderFunction<IDetailsHeaderProps> = (\n  props,\n  defaultRender\n) => {\n  if (!props) {\n    return null;\n  }\n  const onRenderColumnHeaderTooltip: IRenderFunction<IDetailsColumnRenderTooltipProps> = (\n    tooltipHostProps\n  ) => <TooltipHost {...tooltipHostProps} />;\n  return (\n    <Sticky stickyPosition={StickyPositionType.Header} isScrollSynced>\n      {defaultRender!({\n        ...props,\n        onRenderColumnHeaderTooltip,\n      })}\n    </Sticky>\n  );\n};\n\nexport class DetailsListDocumentsExample extends React.Component<\n  {},\n  IDetailsListDocumentsExampleState\n> {\n  private _selection: Selection;\n  private _allItems: IDocument[];\n\n  constructor(props: {}) {\n    super(props);\n\n    this._allItems = _generateDocuments();\n\n    const columns: IColumn[] = [\n      {\n        key: \"column1\",\n        name: \"File Type\",\n        className: classNames.fileIconCell,\n        iconClassName: classNames.fileIconHeaderIcon,\n        ariaLabel:\n          \"Column operations for File type, Press to sort on File type\",\n        iconName: \"Page\",\n        isIconOnly: true,\n        fieldName: \"name\",\n        minWidth: 16,\n        maxWidth: 16,\n        onColumnClick: this._onColumnClick,\n        onRender: (item: IDocument) => (\n          <TooltipHost content={`${item.fileType} file`}>\n            <img\n              src={item.iconName}\n              className={classNames.fileIconImg}\n              alt={`${item.fileType} file icon`}\n            />\n          </TooltipHost>\n        ),\n      },\n      {\n        key: \"column2\",\n        name: \"Name\",\n        fieldName: \"name\",\n        minWidth: 300,\n        maxWidth: 500,\n        isRowHeader: true,\n        isResizable: true,\n        isSorted: true,\n        isSortedDescending: false,\n        sortAscendingAriaLabel: \"Sorted A to Z\",\n        sortDescendingAriaLabel: \"Sorted Z to A\",\n        onColumnClick: this._onColumnClick,\n        data: \"string\",\n        isPadded: true,\n      },\n      {\n        key: \"column3\",\n        name: \"Date Created\",\n        fieldName: \"dateCreatedValue\",\n        minWidth: 70,\n        maxWidth: 90,\n        isResizable: true,\n        onColumnClick: this._onColumnClick,\n        data: \"number\",\n        onRender: (item: IDocument) => {\n          return <span>{item.dateModified}</span>;\n        },\n        isPadded: true,\n      },\n      {\n        key: \"column4\",\n        name: \"Modified By\",\n        fieldName: \"modifiedBy\",\n        minWidth: 70,\n        maxWidth: 90,\n        isResizable: true,\n        isCollapsible: false,\n        data: \"string\",\n        onColumnClick: this._onColumnClick,\n        onRender: (item: IDocument) => {\n          return <span>{item.modifiedBy}</span>;\n        },\n        isPadded: true,\n      },\n      {\n        key: \"column5\",\n        name: \"Shared\",\n        fieldName: \"sharedValue\",\n        minWidth: 70,\n        maxWidth: 90,\n        isResizable: true,\n        onColumnClick: this._onColumnClick,\n        data: \"string\",\n        onRender: (item: IDocument) => {\n          return <span>{item.shared}</span>;\n        },\n        isPadded: true,\n      },\n      {\n        key: \"column6\",\n        name: \"Modified\",\n        fieldName: \"modifiedValue\",\n        minWidth: 80,\n        maxWidth: 240,\n        isResizable: true,\n        onColumnClick: this._onColumnClick,\n        data: \"string\",\n        onRender: (item: IDocument) => {\n          return <span>{item.modified}</span>;\n        },\n        isPadded: true,\n      },\n      {\n        key: \"column7\",\n        name: \"File Size\",\n        fieldName: \"fileSizeRaw\",\n        minWidth: 70,\n        maxWidth: 90,\n        isResizable: true,\n        isCollapsible: false,\n        data: \"number\",\n        onColumnClick: this._onColumnClick,\n        onRender: (item: IDocument) => {\n          return <span>{item.fileSize}</span>;\n        },\n      },\n      {\n        key: \"column8\",\n        name: \"Owner\",\n        fieldName: \"owner\",\n        minWidth: 70,\n        maxWidth: 90,\n        isResizable: true,\n        isCollapsible: false,\n        data: \"string\",\n        onColumnClick: this._onColumnClick,\n        onRender: (item: IDocument) => {\n          return <span>{\"Tim Deboar\"}</span>;\n        },\n        isPadded: true,\n      },\n    ];\n\n    this._selection = new Selection({\n      onSelectionChanged: () => {\n        this.setState({\n          selectionDetails: this._getSelectionDetails(),\n        });\n      },\n    });\n\n    this.state = {\n      items: this._allItems, //[], //\n      columns: columns,\n      selectionDetails: this._getSelectionDetails(),\n      isModalSelection: false,\n      isCompactMode: false,\n      announcedMessage: undefined,\n    };\n  }\n\n  public render() {\n    const { columns, isCompactMode, items } = this.state;\n\n    return (\n      <ScrollablePane\n        scrollbarVisibility={ScrollbarVisibility.always}\n        className={classNames.wrapper}\n      >\n        <DetailsList\n          items={items}\n          compact={isCompactMode}\n          columns={columns}\n          selectionMode={SelectionMode.none}\n          getKey={this._getKey}\n          setKey=\"none\"\n          layoutMode={DetailsListLayoutMode.justified}\n          isHeaderVisible={true}\n          onItemInvoked={this._onItemInvoked}\n          constrainMode={ConstrainMode.unconstrained}\n          onRenderDetailsHeader={onRenderDetailsHeader}\n        />\n      </ScrollablePane>\n    );\n  }\n\n  public componentDidUpdate(\n    previousProps: any,\n    previousState: IDetailsListDocumentsExampleState\n  ) {\n    if (\n      previousState.isModalSelection !== this.state.isModalSelection &&\n      !this.state.isModalSelection\n    ) {\n      this._selection.setAllSelected(false);\n    }\n  }\n\n  private _getKey(item: any, index?: number): string {\n    return item.key;\n  }\n\n  private _onChangeModalSelection = (\n    ev: React.MouseEvent<HTMLElement>,\n    checked: boolean | undefined\n  ): void => {\n    this.setState({ isModalSelection: checked });\n  };\n\n  private _onChangeText = (\n    ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text: string | undefined\n  ): void => {\n    this.setState({\n      items: text\n        ? this._allItems.filter((i) => i.name.toLowerCase().indexOf(text) > -1)\n        : this._allItems,\n    });\n  };\n\n  private _onItemInvoked(item: any): void {\n    alert(`Item invoked: ${item.name}`);\n  }\n\n  private _getSelectionDetails(): string {\n    const selectionCount = this._selection.getSelectedCount();\n\n    switch (selectionCount) {\n      case 0:\n        return \"No items selected\";\n      case 1:\n        return (\n          \"1 item selected: \" +\n          (this._selection.getSelection()[0] as IDocument).name\n        );\n      default:\n        return `${selectionCount} items selected`;\n    }\n  }\n\n  private _onColumnClick = (\n    ev: React.MouseEvent<HTMLElement>,\n    column: IColumn\n  ): void => {\n    const { columns, items } = this.state;\n    const newColumns: IColumn[] = columns.slice();\n    const currColumn: IColumn = newColumns.filter(\n      (currCol) => column.key === currCol.key\n    )[0];\n    newColumns.forEach((newCol: IColumn) => {\n      if (newCol === currColumn) {\n        currColumn.isSortedDescending = !currColumn.isSortedDescending;\n        currColumn.isSorted = true;\n        this.setState({\n          announcedMessage: `${currColumn.name} is sorted ${\n            currColumn.isSortedDescending ? \"descending\" : \"ascending\"\n          }`,\n        });\n      } else {\n        newCol.isSorted = false;\n        newCol.isSortedDescending = true;\n      }\n    });\n    const newItems = _copyAndSort(\n      items,\n      currColumn.fieldName!,\n      currColumn.isSortedDescending\n    );\n    this.setState({\n      columns: newColumns,\n      items: newItems,\n    });\n  };\n}\n\nfunction _copyAndSort<T>(\n  items: T[],\n  columnKey: string,\n  isSortedDescending?: boolean\n): T[] {\n  const key = columnKey as keyof T;\n  return items\n    .slice(0)\n    .sort((a: T, b: T) =>\n      (isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1\n    );\n}\n\nfunction _generateDocuments() {\n  const items: IDocument[] = [];\n  var now = new Date();\n\n  for (let i = 0; i < 500; i++) {\n    const randomDate = _randomDate(new Date(2012, 0, 1), new Date());\n    var differenceInTime = now.getTime() - randomDate.date.getTime();\n    const differenceInDays = Math.trunc(differenceInTime / (1000 * 3600 * 24));\n    const randomFileSize = _randomFileSize();\n    const randomFileType = _randomFileIcon();\n    const randomSharedStatus = _randomSharedStatus();\n    let fileName = _lorem(2);\n    fileName =\n      fileName.charAt(0).toUpperCase() +\n      fileName.slice(1).concat(`.${randomFileType.docType}`);\n    let userName = _lorem(2);\n    userName = userName\n      .split(\" \")\n      .map((name: string) => name.charAt(0).toUpperCase() + name.slice(1))\n      .join(\" \");\n    items.push({\n      key: i.toString(),\n      name: fileName,\n      value: fileName,\n      iconName: randomFileType.url,\n      fileType: randomFileType.docType,\n      modifiedBy: userName,\n      shared: randomSharedStatus,\n      dateModified: randomDate.dateFormatted,\n      dateCreatedValue: randomDate.value,\n      fileSize: randomFileSize.value,\n      fileSizeRaw: randomFileSize.rawSize,\n      modified: `${differenceInDays} days ago`,\n    });\n  }\n  return items;\n}\n\nfunction _randomDate(\n  start: Date,\n  end: Date\n): { value: number; dateFormatted: string; date: Date } {\n  const date: Date = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime())\n  );\n  return {\n    value: date.valueOf(),\n    dateFormatted: date.toLocaleDateString(),\n    date: date,\n  };\n}\n\nconst FILE_ICONS: { name: string }[] = [\n  { name: \"accdb\" },\n  { name: \"audio\" },\n  { name: \"code\" },\n  { name: \"csv\" },\n  { name: \"docx\" },\n  { name: \"dotx\" },\n  { name: \"mpp\" },\n  { name: \"mpt\" },\n  { name: \"model\" },\n  { name: \"one\" },\n  { name: \"onetoc\" },\n  { name: \"potx\" },\n  { name: \"ppsx\" },\n  { name: \"pdf\" },\n  { name: \"photo\" },\n  { name: \"pptx\" },\n  { name: \"presentation\" },\n  { name: \"potx\" },\n  { name: \"pub\" },\n  { name: \"rtf\" },\n  { name: \"spreadsheet\" },\n  { name: \"txt\" },\n  { name: \"vector\" },\n  { name: \"vsdx\" },\n  { name: \"vssx\" },\n  { name: \"vstx\" },\n  { name: \"xlsx\" },\n  { name: \"xltx\" },\n  { name: \"xsn\" },\n];\n\nconst SHARED_STATUS: { name: string }[] = [\n  { name: \"Private\" },\n  { name: \"Shared\" },\n  { name: \"Public\" },\n];\n\nfunction _randomFileIcon(): { docType: string; url: string } {\n  const docType: string =\n    FILE_ICONS[Math.floor(Math.random() * FILE_ICONS.length)].name;\n  return {\n    docType,\n    url: `https://static2.sharepointonline.com/files/fabric/assets/item-types/16/${docType}.svg`,\n  };\n}\n\nfunction _randomFileSize(): { value: string; rawSize: number } {\n  const fileSize: number = Math.floor(Math.random() * 100) + 30;\n  return {\n    value: `${fileSize} KB`,\n    rawSize: fileSize,\n  };\n}\n\nfunction _randomSharedStatus(): string {\n  const status: string =\n    SHARED_STATUS[Math.floor(Math.random() * SHARED_STATUS.length)].name;\n  return status;\n}\n\nconst LOREM_IPSUM = (\n  \"lorem ipsum dolor sit amet consectetur adipiscing elit sed do eiusmod tempor incididunt ut \" +\n  \"labore et dolore magna aliqua ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut \" +\n  \"aliquip ex ea commodo consequat duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore \" +\n  \"eu fugiat nulla pariatur excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt \"\n).split(\" \");\nlet loremIndex = 0;\nfunction _lorem(wordCount: number): string {\n  const startIndex =\n    loremIndex + wordCount > LOREM_IPSUM.length ? 0 : loremIndex;\n  loremIndex = startIndex + wordCount;\n  return LOREM_IPSUM.slice(startIndex, loremIndex).join(\" \");\n}\n","import * as React from \"react\";\nimport {\n  Stack,\n  IStackTokens,\n  Breadcrumb,\n  IBreadcrumbItem,\n  Pivot,\n  PivotItem,\n  IStyleSet,\n  ILabelStyles,\n  Label,\n} from \"@fluentui/react\";\nimport { DetailsListDocumentsExample } from \"./DetailsListDocumentsExample\";\n\nconst numericalSpacingStackTokens: IStackTokens = {\n  childrenGap: 10,\n  // Set some padding vertically and horizontally\n  padding: \"l1 l2\", // https://github.com/microsoft/fluentui/blob/dab45a2afe609709735b9b6e604a1af40d50e809/packages/react/src/components/Stack/StackUtils.test.ts#L103-L104\n};\n\nconst itemsWithHref: IBreadcrumbItem[] = [\n  // Normally each breadcrumb would have a unique href, but to make the navigation less disruptive\n  // in the example, it uses the breadcrumb page as the href for all the items\n  {\n    text: \"Level title\",\n    key: \"t1\",\n    href:\n      \"https://developer.microsoft.com/en-us/fluentui#/controls/web/breadcrumb\",\n    target: \"_blank\",\n  },\n  { text: \"Level title\", key: \"t2\" },\n  {\n    text: \"Page header\",\n    key: \"pageHeader\",\n    href:\n      \"https://developer.microsoft.com/en-us/fluentui#/controls/web/breadcrumb\",\n    target: \"_blank\",\n    isCurrentItem: true,\n  },\n];\n\nconst labelStyles: Partial<IStyleSet<ILabelStyles>> = {\n  root: {},\n};\n\nexport const PageContent: React.FunctionComponent = () => {\n  return (\n    <Stack\n      verticalFill\n      tokens={numericalSpacingStackTokens}\n      styles={{\n        root: {\n          // backgroundColor: \"LightPink\", // header blue,\n        },\n      }}\n    >\n      <Stack>\n        <Stack.Item>\n          <Breadcrumb\n            items={itemsWithHref}\n            ariaLabel=\"Breadcrumb with items rendered as links\"\n            overflowAriaLabel=\"More links\"\n          />\n        </Stack.Item>\n        <Stack.Item>\n          <Pivot\n            aria-label=\"Basic Pivot Example\"\n            styles={{\n              root: {\n                //  backgroundColor: \"LightBlue\",\n                marginBottom: 16,\n              },\n            }}\n          >\n            <PivotItem\n              headerText=\"Tab\"\n              headerButtonProps={{\n                \"data-order\": 1,\n                \"data-title\": \"Tab Title\",\n              }}\n            >\n              <DetailsListDocumentsExample />\n            </PivotItem>\n            <PivotItem headerText=\"Tab\">\n              <Label styles={labelStyles}>Pivot #2</Label>\n            </PivotItem>\n            <PivotItem headerText=\"Tab\">\n              <Label styles={labelStyles}>Pivot #3</Label>\n            </PivotItem>\n          </Pivot>\n        </Stack.Item>\n      </Stack>\n    </Stack>\n  );\n};\n","import * as React from \"react\";\nimport { Stack, ScreenWidthMinUhfMobile } from \"@fluentui/react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { SiteCommandBar } from \"./SiteCommandBar\";\nimport { PageContent } from \"./PageContent\";\nimport { useWindowSize } from \"../../hooks/useWindowSize\";\n\nexport const Site: React.FunctionComponent = () => {\n  const size = useWindowSize();\n  const isSmallScreen = size.width && size.width < ScreenWidthMinUhfMobile;\n\n  return (\n    <Stack\n      horizontal\n      styles={{\n        root: {\n          // backgroundColor: \"#faf9f8\", // light grey for content\n        },\n      }}\n    >\n      {!isSmallScreen && <Sidebar />}\n\n      <Stack\n        grow={1}\n        styles={{\n          root: {\n            // backgroundColor: \"purple\", // light grey for content\n          },\n        }}\n      >\n        <SiteCommandBar />\n        <PageContent />\n      </Stack>\n    </Stack>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport interface IWindowSize {\n  width?: number;\n  height?: number;\n}\n\n// Hook\nexport function useWindowSize(): IWindowSize {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<IWindowSize>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React from \"react\";\nimport { Stack } from \"@fluentui/react\";\nimport \"./App.css\";\nimport { Header } from \"./components/Header\";\nimport { MessageBox } from \"./components/MessageBox\";\nimport { Site } from \"./components/Site/Site\";\n\nimport { initializeIcons } from \"@fluentui/react/lib/Icons\";\ninitializeIcons(/* optional base url */);\n\nexport const App: React.FunctionComponent = () => {\n  const [isMessageShown, setShowMessage] = React.useState<boolean>(false);\n\n  const resetChoice = React.useCallback(() => {\n    console.log(\"reset Choice\");\n    setShowMessage(false);\n  }, []);\n\n  React.useEffect(\n    () => {\n      let timer1 = setTimeout(() => setShowMessage(true), 5000);\n\n      // this will clear Timeout\n      // when component unmount like in willComponentUnmount\n      // and show will not change to true\n      return () => {\n        clearTimeout(timer1);\n      };\n    },\n    // useEffect will run only one time with empty []\n    // if you pass a value to array,\n    // like this - [data]\n    // than clearTimeout will run every time\n    // this value changes (useEffect re-run)\n    [isMessageShown]\n  );\n\n  return (\n    <Stack\n      verticalFill\n      styles={{\n        root: {\n          // backgroundColor: \"LightCoral\",\n        },\n      }}\n    >\n      <Header />\n      {isMessageShown && <MessageBox resetChoice={resetChoice} />}\n      <Site />\n    </Stack>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { mergeStyles } from \"@fluentui/react\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Inject some global styles\nmergeStyles({\n  \":global(body,html,#root)\": {\n    margin: 0,\n    padding: 0,\n    height: \"100vh\",\n  },\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}